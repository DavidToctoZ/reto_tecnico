{
  "service": {
    "service": "serverless-api-reto",
    "serviceObject": {
      "name": "serverless-api-reto"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "iam": {
        "role": "arn:aws:iam::046743457047:role/desarrollo"
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "RegistrarpersonaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/registrar_persona"
            }
          },
          "ObtenerinfoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/obtener_info"
            }
          },
          "MostrarpersonasLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mostrar_personas"
            }
          },
          "RegistrarpersonaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-api-reto/test/1663708032241-2022-09-20T21:07:12.241Z/serverless-api-reto.zip"
              },
              "Handler": "registrar_persona/index.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "registrar_persona",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::046743457047:role/desarrollo"
            },
            "DependsOn": [
              "RegistrarpersonaLogGroup"
            ]
          },
          "ObtenerinfoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-api-reto/test/1663708032241-2022-09-20T21:07:12.241Z/serverless-api-reto.zip"
              },
              "Handler": "obtener_info_sw/index.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "obtener_info",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::046743457047:role/desarrollo"
            },
            "DependsOn": [
              "ObtenerinfoLogGroup"
            ]
          },
          "MostrarpersonasLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-api-reto/test/1663708032241-2022-09-20T21:07:12.241Z/serverless-api-reto.zip"
              },
              "Handler": "mostrar_personas/index.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "mostrar_personas",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::046743457047:role/desarrollo"
            },
            "DependsOn": [
              "MostrarpersonasLogGroup"
            ]
          },
          "RegistrarpersonaLambdaVersionXTYmzYRhSuk6QQ8ZeL5y5TCjj3uCYVFm2u7KaIUgpU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegistrarpersonaLambdaFunction"
              },
              "CodeSha256": "YuSz2bue9+2nl8y6RG2uJ0CuUCX2i24MBdRhsyWC6co="
            }
          },
          "ObtenerinfoLambdaVersionruIiZ8ONb1MhOVVZIviOduRK78wiMx07q3luAKqSstc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerinfoLambdaFunction"
              },
              "CodeSha256": "YuSz2bue9+2nl8y6RG2uJ0CuUCX2i24MBdRhsyWC6co="
            }
          },
          "MostrarpersonasLambdaVersionDfZID6ejuWx2eE6s9Gju50Bi63TgeURT61qv9bPwe0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MostrarpersonasLambdaFunction"
              },
              "CodeSha256": "YuSz2bue9+2nl8y6RG2uJ0CuUCX2i24MBdRhsyWC6co="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "test-serverless-api-reto",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "RegistrarpersonaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RegistrarpersonaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRegistrarpersona": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RegistrarpersonaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRoutePostRegistrarpersona": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /registrar_persona",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRegistrarpersona"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRegistrarpersona"
          },
          "ObtenerinfoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerinfoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerinfo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerinfoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRouteGetObtenerinfo": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /obtener_info",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerinfo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerinfo"
          },
          "MostrarpersonasLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MostrarpersonasLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationMostrarpersonas": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"MostrarpersonasLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRouteGetMostrarpersonas": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /mostrar_personas",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationMostrarpersonas"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationMostrarpersonas"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-serverless-api-reto-test-ServerlessDeploymentBucketName"
            }
          },
          "RegistrarpersonaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegistrarpersonaLambdaVersionXTYmzYRhSuk6QQ8ZeL5y5TCjj3uCYVFm2u7KaIUgpU"
            },
            "Export": {
              "Name": "sls-serverless-api-reto-test-RegistrarpersonaLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerinfoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerinfoLambdaVersionruIiZ8ONb1MhOVVZIviOduRK78wiMx07q3luAKqSstc"
            },
            "Export": {
              "Name": "sls-serverless-api-reto-test-ObtenerinfoLambdaFunctionQualifiedArn"
            }
          },
          "MostrarpersonasLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MostrarpersonasLambdaVersionDfZID6ejuWx2eE6s9Gju50Bi63TgeURT61qv9bPwe0"
            },
            "Export": {
              "Name": "sls-serverless-api-reto-test-MostrarpersonasLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-serverless-api-reto-test-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-api-reto-test-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "registrarpersona": {
        "handler": "registrar_persona/index.handler",
        "name": "registrar_persona",
        "events": [
          {
            "httpApi": {
              "path": "/registrar_persona",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/registrar_persona"
          }
        ],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "RegistrarpersonaLambdaVersionXTYmzYRhSuk6QQ8ZeL5y5TCjj3uCYVFm2u7KaIUgpU"
      },
      "obtenerinfo": {
        "handler": "obtener_info_sw/index.handler",
        "name": "obtener_info",
        "events": [
          {
            "httpApi": {
              "path": "/obtener_info",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/obtener_info"
          }
        ],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ObtenerinfoLambdaVersionruIiZ8ONb1MhOVVZIviOduRK78wiMx07q3luAKqSstc"
      },
      "mostrarpersonas": {
        "handler": "mostrar_personas/index.handler",
        "name": "mostrar_personas",
        "events": [
          {
            "httpApi": {
              "path": "/mostrar_personas",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/mostrar_personas"
          }
        ],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "MostrarpersonasLambdaVersionDfZID6ejuWx2eE6s9Gju50Bi63TgeURT61qv9bPwe0"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "serverless-api-reto",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\dtoct\\Desktop\\ProyectoAWS\\codigo\\.serverless\\serverless-api-reto.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-api-reto/test/1663708032241-2022-09-20T21:07:12.241Z",
    "artifact": "serverless-api-reto.zip"
  }
}